<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<select id="readMember" parameterType="String" resultType="care.dog.member.Member">
		SELECT m1.memberId, userName, userPwd
		FROM member1 m1
		LEFT OUTER JOIN 	member2 m2 ON m1.memberId = m2.memberId
		WHERE m1.memberId = #{memberId}
	</select>
	
	<update id="updateLastLogin" parameterType="String">
		UPDATE  member1 SET last_login = SYSDATE
		WHERE userId=#{userId}
	</update>
	
    <insert id="insertMember1" parameterType="care.dog.member.Member">
       INSERT INTO member1(userId, userName, userPwd) VALUES
                 (#{userId}, #{userName}, #{userPwd}) 
    </insert>

    <insert id="insertMember2" parameterType="care.dog.member.Member">
       INSERT INTO member2
            (userId, birth, email, tel, zip, addr1, addr2)  VALUES 
            (#{userId}, #{birth}, #{email}, #{tel}, 
                    #{zip, jdbcType=VARCHAR}, #{addr1, jdbcType=VARCHAR}, 
                    #{addr2, jdbcType=VARCHAR})
    </insert>
	
    <update id="insertMember" parameterType="care.dog.member.Member">
       INSERT ALL
           INTO member1(userId, userName, userPwd) VALUES (#{userId}, #{userName}, #{userPwd})
           INTO member2(userId, birth, email, tel, zip, addr1, addr2)  VALUES 
                    (#{userId}, #{birth}, #{email}, #{tel}, 
                        #{zip, jdbcType=VARCHAR}, #{addr1, jdbcType=VARCHAR}, 
                        #{addr2, jdbcType=VARCHAR})
            SELECT * FROM dual     
    </update>
	
    <!-- 회원정보 수정  --> 
    <update id="updateMember1" parameterType="care.dog.member.Member">
        UPDATE member1 SET userPwd=#{userPwd}, modify_date=SYSDATE
               WHERE userId=#{userId}
    </update>
	
    <update id="updateMember2" parameterType="care.dog.member.Member">
        UPDATE member2 SET email=#{email, jdbcType=VARCHAR}, 
                     tel=#{tel, jdbcType=VARCHAR}, birth=#{birth, jdbcType=VARCHAR},
                     zip=#{zip, jdbcType=VARCHAR},
                     addr1=#{addr1, jdbcType=VARCHAR}, addr2=#{addr2, jdbcType=VARCHAR}
               WHERE userId=#{userId}
    </update>

    <update id="updateMemberEnabled" parameterType="map">
        UPDATE member1 SET enabled=#{enabled}
               WHERE userId=#{userId}
    </update>
    
    <!-- member2 테이블 정보 삭제  -->    
    <delete id="deleteMember2" parameterType="String">
    	DELETE FROM member2 WHERE userId=#{userId}
    </delete>

	<!-- 어쏘러티(권한) 테이블 -->    
	<insert id="insertAuthority" parameterType="care.dog.member.Member">
	    INSERT INTO memberAuthority(userId, authority)
	        VALUES (#{userId}, #{authority})
	</insert>
	
	<select id="listAuthority" parameterType="String" resultType="care.dog.member.Member">
	    SELECT memberId, authority
	        FROM memberAuthority WHERE memberId=#{memberId}
	</select>
	
	<update id="updateAuthority" parameterType="map">
	     UPDATE memberAuthority SET authority=#{authority}
	         WHERE memberId=#{memberId} AND authority=#{oldAuthority}
	</update>
	
</mapper>