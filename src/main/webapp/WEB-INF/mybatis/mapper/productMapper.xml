<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store">

	<sql id="where-list">
	  <if test="searchKey=='productName'">
	       INSTR(productName, #{searchValue}) &gt; 0
	  </if>
	  <if test="searchKey=='brand'">
	      INSTR(brand, #{searchValue}) &gt; 0 
	  </if>
	</sql>

	<select id="listProduct" parameterType="map" resultType="care.dog.store.Product">
	SELECT * FROM (
		SELECT ROWNUM rnum, tb.* FROM (
			SELECT productId, productName, brand, imageFilename, sellingPrice, price, amount, 
			isContinued, mileage, p.categoryId, c.categoryName
			FROM product p JOIN productCategory c
				ON p.categoryId = c.categoryId
			<where>
            	<if test="searchValue != null and searchValue != ''">
					<include refid="where-list"/>
		    	</if>
	        </where>
			ORDER BY productId
	<![CDATA[
			) tb WHERE ROWNUM <= #{end}
		) WHERE rnum >= #{start}
	]]>
	</select>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
	SELECT NVL(COUNT(*), 0) FROM product p
		JOIN productCategory c
		ON p.categoryId = c.categoryId
		<where>
	     	<if test="searchValue!=null and searchValue!='' ">
	     	    <include refid="where-list"/>
	     	</if>
	     </where>
	</select>
	 
	<!-- resultType String으로 바꿔야하나 dto가 하나로 정의 되어서? -->
	<select id="readOption" parameterType="Integer" resultType="care.dog.store.Product">
	select p.productId, productName, optionId, optionContent
    FROM product p 
    	join productOption o
    	on p.productId = o.productId
    where p.productId = #{productId}
    ORDER BY productId
	</select>
	
	<select id="readProduct" parameterType="Integer" resultType="care.dog.store.Product">
	SELECT productId, productName, imageFilename, sellingPrice, price, amount, 
		isContinued, mileage, p.categoryId, c.categoryName
	FROM product p 
    	JOIN productCategory c
    	ON p.categoryId = c.categoryId
	where productId = #{productId}
	ORDER BY productId
	</select>
	
	<select id="listProductReply" parameterType="map" resultType="care.dog.store.Reply">
	SELECT * FROM (
		SELECT ROWNUM rnum, tb.* FROM (
			SELECT replyId, replyContent, grade, to_char(created, 'yyyy.mm.dd') created, 
            	productId, memberId 
			FROM productReply
            where productId = #{productId}
			ORDER BY created desc
	<![CDATA[
			) tb WHERE ROWNUM <= #{end}
		) WHERE rnum >= #{start}
	]]>
	</select>
	
	<select id="dataCountReply" parameterType="Integer" resultType="Integer">
	SELECT NVL(COUNT(*), 0) FROM productReply
	where productId = #{productId}
	</select>
	
	<select id="listProductQna" parameterType="map" resultType="care.dog.store.Qna">
	SELECT * FROM (
		SELECT ROWNUM rnum, tb.* FROM (
			SELECT qnaId, question, answer, to_char(qCreated, 'yyyy.mm.dd') qCreated, 
           to_char(aCreated, 'yyyy.mm.dd') aCreated, isAnswered, productId, memberId 
			FROM productQna
            where productId = #{productId}
			ORDER BY qCreated desc
	<![CDATA[
			) tb WHERE ROWNUM <= #{end}
		) WHERE rnum >= #{start}
	]]>
	</select>
	
	<select id="dataCountQna" parameterType="Integer" resultType="Integer">
	SELECT NVL(COUNT(*), 0) FROM productQna
	where productId = #{productId}
	</select>
	
</mapper>




