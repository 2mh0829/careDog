<?xml version="1.0" encoding="UTF-8"?>  
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<context:component-scan base-package="care.dog"/>

	<http auto-config="true" use-expressions="true">
	        <csrf disabled="true"/>
	        
    		<!-- 스마트에디터 -->
			<headers>
            	<frame-options policy="SAMEORIGIN" />
            	<hsts disabled="true"/>
        	</headers>    	
        	        
            <!-- 모든 접근자를 항상 승인 -->
            <intercept-url pattern="/index.jsp" access="permitAll" />
            <intercept-url pattern="/" access="permitAll" />
            <intercept-url pattern="/main" access="permitAll" />
            <intercept-url pattern="/member/login" access="permitAll" />
            <intercept-url pattern="/member/join1" access="permitAll" />
            <intercept-url pattern="/member/join2" access="permitAll" />
            <intercept-url pattern="/member/join3" access="permitAll" />
            <intercept-url pattern="/member/auth" access="permitAll" />
            <intercept-url pattern="/member/auth_completed" access="permitAll" />
            <intercept-url pattern="/member/id" access="permitAll" />
            <intercept-url pattern="/member/pwd" access="permitAll" />
			<intercept-url pattern="/member/memberIdCheck" access="permitAll" />
			<intercept-url pattern="/member/emailChecked" access="permitAll" />
			
			<intercept-url pattern="/store" access="permitAll" />
			<intercept-url pattern="/store/list" access="permitAll" />
			<intercept-url pattern="/store/article" access="permitAll" />
			<intercept-url pattern="/store/stack" access="permitAll" />
			<intercept-url pattern="/store/listProductReply" access="permitAll" />
			<intercept-url pattern="/store/listProductQna" access="permitAll" />
			
			
			<intercept-url pattern="/mungstargram" access="permitAll" />
			<intercept-url pattern="/mungstargram/list" access="permitAll" />
			<intercept-url pattern="/mungstargram/autocomplete" access="permitAll" />
			<intercept-url pattern="/mungstargram/article" access="permitAll" />
			<intercept-url pattern="/uploads/mungstargram/**" access="permitAll" />
			
			<!-- 서비스 시큐리티 예외 -->
			<intercept-url pattern="/service" access="permitAll"></intercept-url>
			<intercept-url pattern="/service/sitter_input" access="permitAll"></intercept-url>
			<intercept-url pattern="/service/sitting_detail" access="permitAll"></intercept-url>

            <!-- 이미지, javascript, css등 -->
			<intercept-url pattern="/resource/**" access="permitAll" />
				        
	         <!-- admin -->
		    <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		    
			<intercept-url pattern="/customer/notice/created" access="hasRole('ROLE_ADMIN')"/>
			<intercept-url pattern="/customer/notice/update" access="hasRole('ROLE_ADMIN')"/>
			<intercept-url pattern="/customer/notice/delete" access="hasRole('ROLE_ADMIN')"/>
			
	         <!-- 모든 페이지 -->
	        <intercept-url pattern="/**" access="hasRole('ROLE_USER')" />

	        <!--  사용자 정의 로그인 폼  -->
	        <form-login login-page="/member/login"
	             login-processing-url="/member/login_check"
	             username-parameter="userId"
	             password-parameter="userPwd"
	             authentication-failure-url="/member/login?login_error" 
	             default-target-url="/"
	             always-use-default-target="false"
	             authentication-success-handler-ref="loginSuccessHandler"/>
	        
	        <logout logout-url="/member/logout"
	                     invalidate-session="true"
	                     logout-success-url="/"/>
	        
	        <!-- 접근 권한이 없는 경우 -->
	        <access-denied-handler error-page="/member/noAuthorized"/>
	        
	        <!-- AJAX 로그인 검사를 위한 필터 등록 -->    	              
    		<custom-filter ref="ajaxSessionTimeoutFilter"
    	              after="EXCEPTION_TRANSLATION_FILTER"/>
    	              
	         <!-- 동일 아이디로 동시에 1명만 접속(기존 세션 만료) -->
			<session-management>
				<concurrency-control max-sessions="1" expired-url="/member/expired"/>
			</session-management>	        
	</http>
	

	<beans:bean id="loginSuccessHandler"
               class="care.dog.security.LoginSuccessHandler"/>
               
     <jdbc-user-service 
         data-source-ref="dataSource"
         id="userService"
         users-by-username-query="SELECT memberId AS username, userPwd AS password, isMember AS enabled FROM member1 WHERE memberId=?"
         authorities-by-username-query="SELECT memberId AS username, authority AS authority FROM memberAuthority WHERE memberId=?"/>
    
	<authentication-manager>
		<authentication-provider user-service-ref="userService">
		     <password-encoder hash="sha-256" />
		</authentication-provider>
	</authentication-manager>

	<!-- AJAX 작업에서 예외가 발생한 경우 실행할 필터 -->
	<beans:bean id="ajaxSessionTimeoutFilter" class="care.dog.security.AjaxSessionTimeoutFilter">
		<beans:property name="ajaxHeader" value="AJAX" />
	</beans:bean>

</beans:beans>
